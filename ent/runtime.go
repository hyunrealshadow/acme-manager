// Code generated by ent, DO NOT EDIT.

package ent

import (
	"acme-manager/ent/acmeaccount"
	"acme-manager/ent/acmeserver"
	"acme-manager/ent/certificate"
	"acme-manager/ent/dnsprovider"
	"acme-manager/ent/schema"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	acmeaccountFields := schema.AcmeAccount{}.Fields()
	_ = acmeaccountFields
	// acmeaccountDescName is the schema descriptor for name field.
	acmeaccountDescName := acmeaccountFields[2].Descriptor()
	// acmeaccount.NameValidator is a validator for the "name" field. It is called by the builders before save.
	acmeaccount.NameValidator = acmeaccountDescName.Validators[0].(func(string) error)
	// acmeaccountDescDescription is the schema descriptor for description field.
	acmeaccountDescDescription := acmeaccountFields[3].Descriptor()
	// acmeaccount.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	acmeaccount.DescriptionValidator = acmeaccountDescDescription.Validators[0].(func(string) error)
	// acmeaccountDescEmail is the schema descriptor for email field.
	acmeaccountDescEmail := acmeaccountFields[4].Descriptor()
	// acmeaccount.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	acmeaccount.EmailValidator = acmeaccountDescEmail.Validators[0].(func(string) error)
	// acmeaccountDescKeyFingerprint is the schema descriptor for key_fingerprint field.
	acmeaccountDescKeyFingerprint := acmeaccountFields[7].Descriptor()
	// acmeaccount.KeyFingerprintValidator is a validator for the "key_fingerprint" field. It is called by the builders before save.
	acmeaccount.KeyFingerprintValidator = acmeaccountDescKeyFingerprint.Validators[0].(func(string) error)
	// acmeaccountDescCreatedAt is the schema descriptor for created_at field.
	acmeaccountDescCreatedAt := acmeaccountFields[11].Descriptor()
	// acmeaccount.DefaultCreatedAt holds the default value on creation for the created_at field.
	acmeaccount.DefaultCreatedAt = acmeaccountDescCreatedAt.Default.(func() time.Time)
	// acmeaccountDescID is the schema descriptor for id field.
	acmeaccountDescID := acmeaccountFields[0].Descriptor()
	// acmeaccount.DefaultID holds the default value on creation for the id field.
	acmeaccount.DefaultID = acmeaccountDescID.Default.(func() uuid.UUID)
	acmeserverFields := schema.AcmeServer{}.Fields()
	_ = acmeserverFields
	// acmeserverDescName is the schema descriptor for name field.
	acmeserverDescName := acmeserverFields[1].Descriptor()
	// acmeserver.NameValidator is a validator for the "name" field. It is called by the builders before save.
	acmeserver.NameValidator = acmeserverDescName.Validators[0].(func(string) error)
	// acmeserverDescDescription is the schema descriptor for description field.
	acmeserverDescDescription := acmeserverFields[2].Descriptor()
	// acmeserver.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	acmeserver.DescriptionValidator = acmeserverDescDescription.Validators[0].(func(string) error)
	// acmeserverDescURL is the schema descriptor for url field.
	acmeserverDescURL := acmeserverFields[3].Descriptor()
	// acmeserver.URLValidator is a validator for the "url" field. It is called by the builders before save.
	acmeserver.URLValidator = acmeserverDescURL.Validators[0].(func(string) error)
	// acmeserverDescBuiltIn is the schema descriptor for built_in field.
	acmeserverDescBuiltIn := acmeserverFields[4].Descriptor()
	// acmeserver.DefaultBuiltIn holds the default value on creation for the built_in field.
	acmeserver.DefaultBuiltIn = acmeserverDescBuiltIn.Default.(bool)
	// acmeserverDescExternalAccountRequired is the schema descriptor for external_account_required field.
	acmeserverDescExternalAccountRequired := acmeserverFields[5].Descriptor()
	// acmeserver.DefaultExternalAccountRequired holds the default value on creation for the external_account_required field.
	acmeserver.DefaultExternalAccountRequired = acmeserverDescExternalAccountRequired.Default.(bool)
	// acmeserverDescCreatedAt is the schema descriptor for created_at field.
	acmeserverDescCreatedAt := acmeserverFields[6].Descriptor()
	// acmeserver.DefaultCreatedAt holds the default value on creation for the created_at field.
	acmeserver.DefaultCreatedAt = acmeserverDescCreatedAt.Default.(func() time.Time)
	// acmeserverDescID is the schema descriptor for id field.
	acmeserverDescID := acmeserverFields[0].Descriptor()
	// acmeserver.DefaultID holds the default value on creation for the id field.
	acmeserver.DefaultID = acmeserverDescID.Default.(func() uuid.UUID)
	certificateFields := schema.Certificate{}.Fields()
	_ = certificateFields
	// certificateDescCommonName is the schema descriptor for common_name field.
	certificateDescCommonName := certificateFields[3].Descriptor()
	// certificate.CommonNameValidator is a validator for the "common_name" field. It is called by the builders before save.
	certificate.CommonNameValidator = certificateDescCommonName.Validators[0].(func(string) error)
	// certificateDescOrganization is the schema descriptor for organization field.
	certificateDescOrganization := certificateFields[5].Descriptor()
	// certificate.OrganizationValidator is a validator for the "organization" field. It is called by the builders before save.
	certificate.OrganizationValidator = certificateDescOrganization.Validators[0].(func(string) error)
	// certificateDescOrganizationalUnit is the schema descriptor for organizational_unit field.
	certificateDescOrganizationalUnit := certificateFields[6].Descriptor()
	// certificate.OrganizationalUnitValidator is a validator for the "organizational_unit" field. It is called by the builders before save.
	certificate.OrganizationalUnitValidator = certificateDescOrganizationalUnit.Validators[0].(func(string) error)
	// certificateDescCountry is the schema descriptor for country field.
	certificateDescCountry := certificateFields[7].Descriptor()
	// certificate.CountryValidator is a validator for the "country" field. It is called by the builders before save.
	certificate.CountryValidator = certificateDescCountry.Validators[0].(func(string) error)
	// certificateDescState is the schema descriptor for state field.
	certificateDescState := certificateFields[8].Descriptor()
	// certificate.StateValidator is a validator for the "state" field. It is called by the builders before save.
	certificate.StateValidator = certificateDescState.Validators[0].(func(string) error)
	// certificateDescLocality is the schema descriptor for locality field.
	certificateDescLocality := certificateFields[9].Descriptor()
	// certificate.LocalityValidator is a validator for the "locality" field. It is called by the builders before save.
	certificate.LocalityValidator = certificateDescLocality.Validators[0].(func(string) error)
	// certificateDescStreetAddress is the schema descriptor for street_address field.
	certificateDescStreetAddress := certificateFields[10].Descriptor()
	// certificate.StreetAddressValidator is a validator for the "street_address" field. It is called by the builders before save.
	certificate.StreetAddressValidator = certificateDescStreetAddress.Validators[0].(func(string) error)
	// certificateDescFingerprint is the schema descriptor for fingerprint field.
	certificateDescFingerprint := certificateFields[16].Descriptor()
	// certificate.FingerprintValidator is a validator for the "fingerprint" field. It is called by the builders before save.
	certificate.FingerprintValidator = certificateDescFingerprint.Validators[0].(func(string) error)
	// certificateDescCreatedAt is the schema descriptor for created_at field.
	certificateDescCreatedAt := certificateFields[20].Descriptor()
	// certificate.DefaultCreatedAt holds the default value on creation for the created_at field.
	certificate.DefaultCreatedAt = certificateDescCreatedAt.Default.(func() time.Time)
	// certificateDescID is the schema descriptor for id field.
	certificateDescID := certificateFields[0].Descriptor()
	// certificate.DefaultID holds the default value on creation for the id field.
	certificate.DefaultID = certificateDescID.Default.(func() uuid.UUID)
	dnsproviderFields := schema.DnsProvider{}.Fields()
	_ = dnsproviderFields
	// dnsproviderDescName is the schema descriptor for name field.
	dnsproviderDescName := dnsproviderFields[1].Descriptor()
	// dnsprovider.NameValidator is a validator for the "name" field. It is called by the builders before save.
	dnsprovider.NameValidator = dnsproviderDescName.Validators[0].(func(string) error)
	// dnsproviderDescDescription is the schema descriptor for description field.
	dnsproviderDescDescription := dnsproviderFields[2].Descriptor()
	// dnsprovider.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	dnsprovider.DescriptionValidator = dnsproviderDescDescription.Validators[0].(func(string) error)
	// dnsproviderDescType is the schema descriptor for type field.
	dnsproviderDescType := dnsproviderFields[3].Descriptor()
	// dnsprovider.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	dnsprovider.TypeValidator = dnsproviderDescType.Validators[0].(func(string) error)
	// dnsproviderDescCreatedAt is the schema descriptor for created_at field.
	dnsproviderDescCreatedAt := dnsproviderFields[5].Descriptor()
	// dnsprovider.DefaultCreatedAt holds the default value on creation for the created_at field.
	dnsprovider.DefaultCreatedAt = dnsproviderDescCreatedAt.Default.(func() time.Time)
	// dnsproviderDescID is the schema descriptor for id field.
	dnsproviderDescID := dnsproviderFields[0].Descriptor()
	// dnsprovider.DefaultID holds the default value on creation for the id field.
	dnsprovider.DefaultID = dnsproviderDescID.Default.(func() uuid.UUID)
}
