// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"acme-manager/ent/schema/enum"

	"github.com/google/uuid"
)

// CreateAcmeAccountInput is used for create AcmeAccount object.
type CreateAcmeAccountInput struct {
	// Name of the ACME account
	Name string `json:"name"`
	// Description of the ACME account
	Description *string `json:"description,omitempty"`
	// Email address associated with the ACME account
	Email string `json:"email"`
	// Type of private key associated with the ACME account
	KeyType enum.KeyType `json:"keyType"`
	// External Account Binding (EAB) key ID
	EabKeyID *string `json:"eabKeyID,omitempty"`
	// External Account Binding (EAB) HMAC key
	EabHmacKey *string `json:"eabHmacKey,omitempty"`
	// The ID of the ACME server associated with the account
	AcmeServerID uuid.UUID `json:"acmeServerID"`
}

// CreateAcmeServerInput is used for create AcmeServer object.
type CreateAcmeServerInput struct {
	// Name of the ACME server
	Name string `json:"name"`
	// Description of the ACME server
	Description *string `json:"description,omitempty"`
	// URL of the ACME server
	URL string `json:"url"`
}

// CreateCertificateInput is used for create Certificate object.
type CreateCertificateInput struct {
	// Common name of the certificate
	CommonName string `json:"commonName"`
	// Subject alternative name of the certificate
	SubjectAlternativeName []string `json:"subjectAlternativeName,omitempty"`
	// Organization name of the certificate
	Organization *string `json:"organization,omitempty"`
	// Organizational unit name of the certificate
	OrganizationalUnit *string `json:"organizationalUnit,omitempty"`
	// Country code of the certificate
	Country *string `json:"country,omitempty"`
	// State or province of the certificate
	State *string `json:"state,omitempty"`
	// Locality of the certificate
	Locality *string `json:"locality,omitempty"`
	// Street address of the certificate
	StreetAddress *string `json:"streetAddress,omitempty"`
	// Key type of the certificate
	KeyType       enum.KeyType `json:"keyType"`
	AcmeAccountID uuid.UUID    `json:"acmeAccountID"`
	DNSProviderID uuid.UUID    `json:"dnsProviderID"`
}

// CreateDnsProviderInput is used for create DnsProvider object.
type CreateDNSProviderInput struct {
	// Name of the DNS provider
	Name string `json:"name"`
	// Description of the DNS provider
	Description *string `json:"description,omitempty"`
	// Type of the DNS provider
	Type string `json:"type"`
	// Configuration of the DNS provider
	Config string `json:"config"`
}

// UpdateAcmeAccountDangerousInput is used for update AcmeAccount object.
type UpdateAcmeAccountDangerousInput struct {
	// ID of the ACME account
	ID uuid.UUID `json:"id"`
	// Name of the ACME account
	Name string `json:"name"`
	// Description of the ACME account
	Description *string `json:"description,omitempty"`
	// Email address associated with the ACME account
	Email string `json:"email"`
	// Type of private key associated with the ACME account
	KeyType enum.KeyType `json:"keyType"`
	// External Account Binding (EAB) key ID
	EabKeyID *string `json:"eabKeyID,omitempty"`
	// External Account Binding (EAB) HMAC key
	EabHmacKey *string `json:"eabHmacKey,omitempty"`
	// The ID of the ACME server associated with the account
	AcmeServerID uuid.UUID `json:"acmeServerID"`
}

// UpdateAcmeAccountInput is used for update AcmeAccount object.
type UpdateAcmeAccountInput struct {
	// ID of the ACME account
	ID uuid.UUID `json:"id"`
	// Name of the ACME account
	Name string `json:"name"`
	// Description of the ACME account
	Description *string `json:"description,omitempty"`
}

// UpdateAcmeServerDangerousInput is used for update AcmeServer object.
type UpdateAcmeServerDangerousInput struct {
	// ID of the ACME server
	ID uuid.UUID `json:"id"`
	// Name of the ACME server
	Name string `json:"name"`
	// Description of the ACME server
	Description *string `json:"description,omitempty"`
	// URL of the ACME server
	URL string `json:"url"`
}

// UpdateAcmeServerInput is used for update AcmeServer object.
type UpdateAcmeServerInput struct {
	// ID of the ACME server
	ID uuid.UUID `json:"id"`
	// Name of the ACME server
	Name string `json:"name"`
	// Description of the ACME server
	Description *string `json:"description,omitempty"`
}

// UpdateCertificateInput is used for update Certificate object.
type UpdateCertificateInput struct {
	ID uuid.UUID `json:"id"`
	// Common name of the certificate
	CommonName *string `json:"commonName,omitempty"`
	// Subject alternative name of the certificate
	SubjectAlternativeName []string `json:"subjectAlternativeName,omitempty"`
	// Organization name of the certificate
	Organization *string `json:"organization,omitempty"`
	// Organizational unit name of the certificate
	OrganizationalUnit *string `json:"organizationalUnit,omitempty"`
	// Country code of the certificate
	Country *string `json:"country,omitempty"`
	// State or province of the certificate
	State *string `json:"state,omitempty"`
	// Locality of the certificate
	Locality *string `json:"locality,omitempty"`
	// Street address of the certificate
	StreetAddress *string `json:"streetAddress,omitempty"`
	// Key type of the certificate
	KeyType       *enum.KeyType `json:"keyType,omitempty"`
	AcmeAccountID *uuid.UUID    `json:"acmeAccountID,omitempty"`
	DNSProviderID *uuid.UUID    `json:"dnsProviderID,omitempty"`
}

// Dangerously update an existing DNS provider
// It may cause the DNS provider to not be working properly
type UpdateDNSProviderDangerousInput struct {
	// ID of the DNS provider
	ID uuid.UUID `json:"id"`
	// Name of the DNS provider
	Name string `json:"name"`
	// Description of the DNS provider
	Description *string `json:"description,omitempty"`
	// Type of the DNS provider
	Type string `json:"type"`
	// Configuration of the DNS provider
	Config string `json:"config"`
}

// UpdateDnsProviderInput is used for update DnsProvider object.
type UpdateDNSProviderInput struct {
	// ID of the DNS provider
	ID uuid.UUID `json:"id"`
	// Name of the DNS provider
	Name string `json:"name"`
	// Description of the DNS provider
	Description *string `json:"description,omitempty"`
}
